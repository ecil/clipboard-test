https://repo1.maven.org/maven2/org/apache/hive/hive-standalone-metastore/3.1.0/hive-standalone-metastore-3.1.0.jar

https://repo1.maven.org/maven2/org/apache/hive/hive-metastore/3.1.2/hive-metastore-3.1.2.jar

https://repository.cloudera.com/artifactory/cloudera-repos/org/apache/hive/hive-standalone-metastore/3.1.3000.7.1.3.0-100/hive-standalone-metastore-3.1.3000.7.1.3.0-100.jar
https://native-toolchain.s3.amazonaws.com/build/cdp_components/7049391/tarballs/apache-hive-3.1.3000.7.2.7.0-44-bin.tar.gz

python2 hadoop_jmx_exporter.py -cluster yh-cdh -nns http://10.193.40.10:50070/jmx http://10.193.40.3:50070/jmx -rms http://yh-shhd-cdh04:8088/jmx http://yh-shhd-cdh01:8088/jmx
Listen at 0.0.0.0:6688
wget https://dl.grafana.com/oss/release/grafana-6.5.3-1.x86_64.rpm
sudo yum install grafana-6.5.3-1.x86_64.rpm

hadoop::common_hdfs::tls_enabled: true
hadoop::common_hdfs::keystore_location: "/opt/cloudera/security/jks/hadoop.keystore"
hadoop::common_hdfs::keystore_password: "BigDataVF2"
hadoop::common_hdfs::keystore_type: "jks"
hadoop::common_hdfs::truststore_location: "/opt/cloudera/security/jks/bigldmmp01.jks"
hadoop::common_hdfs::truststore_type: "jks"
hadoop::common_hdfs::truststore_password: "BigDataVF2"


<property>
    <name>dfs.http.policy</name>
    <value>HTTPS_ONLY</value>
  </property>
  <property>
    <name>dfs.client.https.need-auth</name>
    <value>false</value>
  </property>
  <property>
    <name>dfs.namenode.https-bind-host</name>
    <value>0.0.0.0</value>
  </property>
  
  
  hadoop_hive::common_config::tls_enabled: true
hadoop_hive::common_config::keystore_location: "/opt/cloudera/security/jks/hadoop.keystore"
hadoop_hive::common_config::keystore_password: "BigDataVF2"
hadoop_hive::common_config::keystore_type: "jks"

wget https://github.com/prometheus/prometheus/releases/download/v2.8.1/prometheus-2.8.1.linux-amd64.tar.gz
useradd --no-create-home --shell /bin/false prometheus
mkdir /etc/prometheus
mkdir /var/lib/prometheus
chown prometheus:prometheus /etc/prometheus

chown prometheus:prometheus /var/lib/prometheus
tar -xvzf prometheus-2.8.1.linux-amd64.tar.gz
mv prometheus-2.8.1.linux-amd64 prometheuspackage
cp prometheuspackage/prometheus /usr/local/bin/
cp prometheuspackage/promtool /usr/local/bin/
chown prometheus:prometheus /usr/local/bin/prometheus
chown prometheus:prometheus /usr/local/bin/promtool
cp -r prometheuspackage/consoles /etc/prometheus

cp -r prometheuspackage/console_libraries /etc/prometheus
chown -R prometheus:prometheus /etc/prometheus/consoles

chown -R prometheus:prometheus /etc/prometheus/console_libraries
vim /etc/prometheus/prometheus.yml
---
global:
  scrape_interval: 10s

scrape_configs:
  - job_name: 'prometheus_master'
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9090']
      
-----
chown prometheus:prometheus /etc/prometheus/prometheus.yml
vim /etc/systemd/system/prometheus.service

----
[Unit]
Description=Prometheus
Wants=network-online.target
After=network-online.target

[Service]
User=prometheus
Group=prometheus
Type=simple
ExecStart=/usr/local/bin/prometheus \
--config.file /etc/prometheus/prometheus.yml \
--storage.tsdb.path /var/lib/prometheus/ \
--web.console.templates=/etc/prometheus/consoles \
--web.console.libraries=/etc/prometheus/console_libraries

[Install]
WantedBy=multi-user.target


------
systemctl daemon-reload
systemctl start prometheus

Check service status.

systemctl status prometheus


import ssl

ssl._create_default_https_context = ssl._create_unverified_context
